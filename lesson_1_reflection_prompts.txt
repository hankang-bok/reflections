How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was a lot easier than searching every single line  for a tiny typo

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I wouldn't have to mull over the steps I went through or when I went 	through them or what last time everything worked. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: not as many unnecessary commits, which would make them hard to sift through.
	Con: I am very forgetful and (hopefully I wouldn't) I might forget to commit often enough.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In code, many files are often interdependent or call on each other. In Google Docs, the documents are independent. 


How might using version control make you more confident to make changes that
could break something?

	I wouldn't have to worry about going back and checking every little thing I changed to fix it. I could just revert if I really needed to. By committing every logical change, I wouldn't even have to go back and fix it myself, I could just git i or change head space. 

Now that you have your workspace set up, what do you want to try using Git for?

	Maybe I can add some more projects!

How can you use the commands git log and git diff to view the history of files?

	Git log shows you the list of recent commits so it's easier to see at a glance. Git diff shows you the difference between two commits. If you use the color 	ui command, it color codes the differenes as well. 
 Thats a silly thing to add